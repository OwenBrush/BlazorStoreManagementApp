

@inventoryFilter.MinimumQuantity
			<tr >
				<td class="w-30">	
					<input	
							@oninput="OnNameContainsChanged"
							type="text"
							class="form-control"
							placeholder="Filter by Name" 
					/>
				</td>
				<td>
					<div class="input-group mb-3">
						<div class="input-group-prepend">
							<span class="input-group-text">Min:</span>
						</div>

						<input 
								@oninput="OnMinQuantityChange"
								min="0"
								type="number" 
								class="form-control col-xs-1" 
								placeholder="">

						<div class="input-group-prepend">
							<span class="input-group-text">Max:</span>
						</div>

						<input 
								@oninput="OnMaxQuantityChange"
								min="0"
								pattern="[0-9]"
								type="number" 
								class="form-control col-xs-1" 
								placeholder="">
					</div>
				</td>
				<td>
					<div class="input-group mb-3">
						<div class="input-group-prepend">
							<span class="input-group-text">Min:</span>
						</div>

						<input 
								@oninput="OnMinPriceChange"
								min="0"
								step="1"
								type="number" 
								class="form-control col-xs-1" 
								placeholder="">

						<div class="input-group-prepend">
							<span class="input-group-text">Max:</span>
						</div>

						<input 
								@oninput="OnMaxPriceChange"
								min="0"
								type="number" 
								class="form-control col-xs-1" 
								placeholder="">
					</div>
				</td>
				<td>
					<button @onclick="OnFilterClear"
							type="button" 
							class="btn-dark input-group-text">		
							Clear
					</button>
				</td>
			</tr>

@code {

	private InventoryFilter inventoryFilter { get ; set; } = new InventoryFilter();


	[Parameter]
	public EventCallback<InventoryFilter> OnFilterChange { get; set; }

	private async Task OnFilterChanged()
	{
		await OnFilterChange.InvokeAsync(inventoryFilter);
	}

	private async Task OnNameContainsChanged(ChangeEventArgs args )
	{
		if (ArgsNull(args)) return;
		inventoryFilter.NameContains = args.Value.ToString();
		await OnFilterChanged();
	}

	private async Task OnMinQuantityChange(ChangeEventArgs args )
	{
		if (ArgsNull(args)) return;
		inventoryFilter.MinimumQuantity = (int)(double.Parse(args.Value.ToString()));
		await OnFilterChanged();
	}

	private async Task OnMaxQuantityChange(ChangeEventArgs args )
	{
		if (ArgsNull(args)) return;
		inventoryFilter.MaximumQuantity = (int)(double.Parse(args.Value.ToString()));
		await OnFilterChanged();
	}

	private async Task OnMinPriceChange(ChangeEventArgs args)
	{
		if (ArgsNull(args)) return;
		inventoryFilter.MinimumPrice = double.Parse(args.Value.ToString());
		await OnFilterChanged();
	}

	private async Task OnMaxPriceChange(ChangeEventArgs args)
	{
		if (ArgsNull(args)) return;
		inventoryFilter.MaximumPrice = double.Parse(args.Value.ToString());
		await OnFilterChanged();
	}

	private async Task OnFilterClear()
	{
		inventoryFilter = new InventoryFilter();
		await OnFilterChanged();
	}

	private bool ArgsNull(ChangeEventArgs args)
	{
		if (args.Value is null) return true;
		if (string.IsNullOrEmpty((string)args.Value)) return true;
		return false;
	}


}
