@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<table class="table">
	<thead>
		<tr>
			<th>Name</th>
			<th>Quantity</th>
			<th>Price</th>
			<th>Edit</th>
		</tr>
	</thead>
	<tbody>
		<InventoryFilterComponent
			OnNameFilterChange="OnNameFilterChange">
		</InventoryFilterComponent>
		@foreach(var inv in listInventories)
		{
			<tr>
				<td>@inv.InventoryName</td>
				<td>@inv.Quantity</td>
				<td>@inv.Price</td>
				<td>
					<button 
						type="button"
						class="btn btn-light">
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>

@code {
	private List<Inventory> listInventories = new List<Inventory>();

	[Parameter]
	public string NameFilter { get; set; } = string.Empty;
	
	private async Task OnNameFilterChange(string nameFilter)
	{
		this.NameFilter = nameFilter;
		listInventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(this.NameFilter)).ToList();
	}

	
}
